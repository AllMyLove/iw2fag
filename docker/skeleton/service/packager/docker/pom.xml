<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>skeleton-packager-docker</artifactId>
	<version>1.0-SNAPSHOT</version>

	<description>skeleton PACKAGER DOCKER</description>

	<parent>
		<groupId>com.iw2fag.lab</groupId>
		<artifactId>skeleton-packager-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<properties>
		<!--will be+ modify automatically via Jenkins-->
		<build.version>LOCAL_BUILD</build.version>
		<war.id>skeleton.war</war.id>
		<build.number>0</build.number>
		<docker.resource.dir>docker-resource</docker.resource.dir>
		<docker.resource.home>${project.build.directory}/${docker.resource.dir}</docker.resource.home>
		<jetty.home>${project.build.directory}/jetty</jetty.home>
		<docker.image.tag>latest</docker.image.tag>
		<docker.image.build.tag>${component.version}-${build.number}</docker.image.build.tag>
		<docker.svc.image.build.tag>${docker.image.build.tag}</docker.svc.image.build.tag>
		<docker.image.type>java</docker.image.type>

		<archive.dir>archive</archive.dir>
		<archive.directory>${project.build.directory}/${archive.dir}</archive.directory>

		<jetty.logback-core.version>1.1.7</jetty.logback-core.version>
		<jetty.logback-json.version>0.1.5</jetty.logback-json.version>
		<jetty.jackson-core.version>2.7.5</jetty.jackson-core.version>
		<jetty.version>9.2.10.v20150310</jetty.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.iw2fag.lab</groupId>
			<artifactId>skeleton-packager-war</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>com.iw2fag.lab</groupId>
			<artifactId>logging</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.iw2fag.lab</groupId>
			<artifactId>skeleton-resources-conf</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>conf</classifier>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-distribution</artifactId>
			<version>${jetty.version}</version>
			<type>tar.gz</type>
			<exclusions>
				<exclusion>
					<artifactId>test-jetty-webapp</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>test-proxy-webapp</artifactId>
					<groupId>org.eclipse.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- docker packager -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-filtered-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${docker.resource.home}</outputDirectory>
							<resources>
								<resource>
									<directory>./src/main/resources/skeleton-home</directory>
									<includes>
										<include>**</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-jetty-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${jetty.home}</outputDirectory>
							<resources>
								<resource>
									<directory>./src/main/resources/jetty</directory>
									<includes>
										<include>**</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jetty-logging-libs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<outputDirectory>${jetty.home}/lib/ext/logging</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>ch.qos.logback</groupId>
									<artifactId>logback-core</artifactId>
									<version>${jetty.logback-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback</groupId>
									<artifactId>logback-classic</artifactId>
									<version>${jetty.logback-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback</groupId>
									<artifactId>logback-access</artifactId>
									<version>${jetty.logback-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-api</artifactId>
									<version>1.7.7</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback.contrib</groupId>
									<artifactId>logback-json-core</artifactId>
									<version>${jetty.logback-json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback.contrib</groupId>
									<artifactId>logback-json-classic</artifactId>
									<version>${jetty.logback-json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback.contrib</groupId>
									<artifactId>logback-json-access</artifactId>
									<version>${jetty.logback-json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>ch.qos.logback.contrib</groupId>
									<artifactId>logback-jackson</artifactId>
									<version>${jetty.logback-json.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.fasterxml.jackson.core</groupId>
									<artifactId>jackson-core</artifactId>
									<version>${jetty.jackson-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.fasterxml.jackson.core</groupId>
									<artifactId>jackson-annotations</artifactId>
									<version>${jetty.jackson-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.fasterxml.jackson.core</groupId>
									<artifactId>jackson-databind</artifactId>
									<version>${jetty.jackson-core.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
								<artifactItem>
									<groupId>com.iw2fag.lab</groupId>
									<artifactId>logging</artifactId>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>

					<execution>
						<id>unpack-resources-conf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteReleases>true</overWriteReleases>
							<outputDirectory>${docker.resource.home}</outputDirectory>
							<includeArtifactIds>skeleton-resources-conf</includeArtifactIds>
							<type>zip</type>
							<classifier>conf</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--get git commit info, uncomment this part if .git exists in project dir-->
			<!--<plugin>-->
				<!--<groupId>pl.project13.maven</groupId>-->
				<!--<artifactId>git-commit-id-plugin</artifactId>-->
				<!--<configuration>-->
					<!--<dotGitDirectory>${project.basedir}/../../../.git</dotGitDirectory>-->
					<!--<skipPoms>false</skipPoms>-->
					<!--<generateGitPropertiesFile>false</generateGitPropertiesFile>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<!--docker package and deploy plugin-->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<images>
						<image>
							<name>srf/skeleton:${docker.svc.image.build.tag}</name>
							<build>
								<dockerFileDir>.</dockerFileDir>
								<tags>
									<tag>${docker.image.build.tag}</tag>
									<tag>${docker.image.tag}</tag>
								</tags>
								<assembly>
									<mode>dir</mode>
									<descriptor>${project.basedir}/src/main/docker/assembly.xml</descriptor>
								</assembly>
								<args>
									<WAR_FILE>${war.id}</WAR_FILE>
									<BUILD_DIR>/maven</BUILD_DIR>

									<IMAGE_TYPE>${docker.image.type}</IMAGE_TYPE>
									<IMAGE_BUILD_NUMBER>${build.number}</IMAGE_BUILD_NUMBER>
									<MAJOR_MINOR_VERSION>${component.version}</MAJOR_MINOR_VERSION>
									<!--<GIT_COMMIT>${git.commit.id.abbrev}</GIT_COMMIT>-->

									<HTTP_PORT>8080</HTTP_PORT>
								</args>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>package-docker</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<pushRegistry>${docker.push.registry}</pushRegistry>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
